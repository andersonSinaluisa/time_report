// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
// Add this block to your schema
generator factories {
  provider = "prisma-factory"
}
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  first_name String  @default("")
  last_name  String  @default("")
  password  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 
  identification String @default("")
  phone String @default("")
  address String @default("")
  city String @default("")
  state String @default("")
  country String @default("")
  zip_code String @default("")
  role String @default("user")
  status Boolean @default(true)
  avatar String @default("")
  projects Project[]
  tasks Task[]
  comments Comments[]
  audit Audit[]
  files File[]
  profile Profile?
  folders Folder[]
  
  
}


model Profile{
  id       Int      @id @default(autoincrement())
  bio     String
  position String
  phone String
  address String
  date_of_birth DateTime?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  user_id Int @unique
  user User @relation(fields: [user_id], references: [id])
}



model File{
  id        Int      @id @default(autoincrement())
  name      String
  description String
  path String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  user_id Int
  user User @relation(fields: [user_id], references: [id])
}



model Folder{
  id        Int      @id @default(autoincrement())
  name      String
  description String
  path String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  user_id Int
  user User @relation(fields: [user_id], references: [id])
}


model Client {
  id        Int      @id @default(autoincrement())
  name      String
  description String
  identification String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  user_id Int
  projects Project[]
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  description String
  type String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  user_id Int
  leader String @default("")
  type_service String @default("")
  client_id Int?
  client Client? @relation(fields: [client_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
  tasks Task[]
}


model Task{
  id        Int      @id @default(autoincrement())
  name      String
  description String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  time_start DateTime?
  time_end DateTime?
  status Int @default(1)
  user_id Int
  project_id Int
  review_by Int?
  review_at DateTime?
  review_comment String?
  project Project @relation(fields: [project_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
  comments Comments[]
}


model Comments{
  id        Int      @id @default(autoincrement())
  comment      String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  user_id Int
  task_id Int
  task Task @relation(fields: [task_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
}

model Permissions{
  id        Int      @id @default(autoincrement())
  code      String
  description String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  roles PermissionsOnRole[]
    
}

model PermissionsOnRole{
  id        Int      @id @default(autoincrement())
  role_id Int
  permission_id Int
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  role Role @relation(fields: [role_id], references: [id])
  permission Permissions @relation(fields: [permission_id], references: [id])
}


model Role{
  id        Int      @id @default(autoincrement())
  name      String
  description String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  permissions PermissionsOnRole[]
}


model Menu{
  id        Int      @id @default(autoincrement())
  name      String
  description String
  icon String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  status Int @default(1)
  parent_id Int?  
}


model Audit{
  id        Int      @id @default(autoincrement())
  user_id Int
  action String
  table_name String
  table_id Int
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  old_value String?
  new_value String?
  status Int @default(1)
  user User @relation(fields: [user_id], references: [id])
}